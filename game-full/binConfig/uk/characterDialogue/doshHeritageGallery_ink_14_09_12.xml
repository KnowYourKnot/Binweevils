<?xml version="1.0" encoding="utf-8"?>

<!--

	=====================================================
	*  NOTES ON AVAILABLE PARAMETERS AND CONTENT NODES  *
	=====================================================
	
	
	============================================
	*  Trickey params not in this incarnation  *
	============================================
	String replacement:	  //username//
	Shuffling of options: <stage shuffle="true">
	
	
	============================================
	*                  NODES                   *
	============================================
	
	<character>
	Attribute: direction 
	Optional:  true (Default "1" if left out)
	Values:    "-1" to flip direction of the bubble
	
	<phase>
	*
	Attribute: num 
	Optional:  false
	Value:     The number that marks this phase's point in the conversation
	Default:   None - required attribute.
	*
	Attribute: animFrame
	Optional:  true
	Value:     The frame label of the character mc to be played when this phase shows
	Default:   No anim
	*
	Attribute: sticky
	Optional:  true
	Values:    "0" and "1". Sticky means that it will fall back to this node from non-sticky nodes on reshow.
	Default:   0
	*
	Attribute: picoDx
	Optional:  true
	Value:     A positive or negative integer number of pixels. 
			   The 'pico' is the pointy bit to the mouth in the speech bubble and picoDx is its distance from the edge of the bubble
	Default:   20
	*
	
	<text>
	Mandatory node. If omitted, an empty bubble is shown
	Accepts html, so if there is html formatting, wrap the text in <![CDATA[]]> tags
	
	<textOnReturn>
	Optional node (technically speaking but check if required by Rob). The text node is used on return to this phase if none is specified and a warning is traced.
	Accepts html, so if there is html formatting, wrap the text in <![CDATA[]]> tags
	
	<userResponse>
	Optional node. If omitted, just the text is displayed and the speech bubble is closed by clicking outside the bubble. A warning is traced.
	WARNING: No userResponse node was found in the XML. This is valid only if it's close to accept.
	*
	Attribute: type
	Optional:  true
	Value:     "freeText". If set to freeText, an input child node is required instead of option nodes.
	Default:   undefined. If undefined it looks for option child nodes.
	
	<option>
	If the userResponse was untyped, then <option> is a mandatory node. One or more can be set.
	*
	Attribute: progressTo
	Optional:  true (if userResponse untyped)
	Value:     integer - the next phase in the conversation. Can be set to "-1" to show that you want it to just act like a close (same as omission) 
	Default:   -1. If -1 it just acts like a close and shows an error message - ERROR: The next phase is invalid for phase (number)
	*
	
	<input>
	If the userResponse was type="freeText", then <input> is a mandatory node.
	*
	Attribute: width
	Optional:  true
	Value:     integer pixel size
	Default:   150
	*
	Attribute: charLimit
	Optional:  true
	Value:     integer number of characters
	Default:   0 (no limit)
	*
	Attribute: caseSensitive
	Optional:  true
	Value:     "0" or "1"
	Default:   1
	*
	
	<correctAns>
	If the userResponse was type="freeText", then <correctAns> is a mandatory node.
	This contains the text against which to validate the user input.
	*
	Attribute: progressTo
	Optional:  false
	Value:     integer - the next phase in the conversation.
	Default:   none - mandatory attribute
	*
	
	<incorrectAns>
	If the userResponse was type="freeText", then <incorrectAns> is a mandatory node.
	No text content; just @progressTo
	*
	Attribute: progressTo
	Optional:  false
	Value:     integer - the next phase in the conversation.
	Default:   none - mandatory attribute
	*
	
-->


<character defaultCloseAnimFrame="rest" direction="-1">

	
	<tasks>
		
				
		<task description="bookCollected" questControlID="512" />
		<task description="sloshyMade" questControlID="513" />
		<task description="questCompleted" questControlID="599" />

		
	</tasks>
	
	
	<phase num="0" animFrame="talk_in">
		<text>Who's there?</text>
			
		<userResponse>
			<option progressTo="1">Don't be afraid. I'm an SWS agent and I'm here to help!</option>
			<option progressTo="2">Why don't you tell me who YOU are first?</option>
		</userResponse>		
	</phase>	
		
	<phase num="1" animFrame="talk_in">
		<text width="400" >Whew! I thought you might be one of them! </text>
			
		<userResponse>
			<option progressTo="-1" fireEvent="doshHeritage_CheckGallery">I think they've gone now...but they won't be far.</option>
		</userResponse>		
		
	</phase>		
	
	<phase num="2" animFrame="talk_in">
		<text width="400" >It's me, Ink!  Please don't hurt me!</text>
		<userResponse>
		<option progressTo="-1" fireEvent="doshHeritage_CheckGallery">Don't be afraid. I'm an SWS agent!</option>
		</userResponse>		
	</phase>	
	
	<phase num="3" animFrame="talk_in" sticky="1">
		<text width="400">In that case...what can I do for you?</text>
			
		<userResponse>
			<option progressTo="4">The intruders have taken a portrait from the Gallery. You don’t know what they did with it, do you?</option>
		</userResponse>		
	</phase>			
	
		
	<phase num="4" animFrame="talk_in">
		<text width="400">Oh yes! I think I saw those horrible rascals carry it through here!</text>
			
		<userResponse>
			<option progressTo="5">Can you remember anything else?</option>
			<option progressTo="5">Where did they go with it?</option>
		</userResponse>		
	</phase>	
	
	
	<phase num="5" animFrame="talk_in" sticky="1">
		<text width="600">They disappeared through the fireplace!  But then one of them came back out and... (gulp) I saw him EAT the portrait!</text>
		<userResponse>
		<option progressTo="6">What! They must have destroyed it after they found whatever secret it contained. Now the secret might be lost forever!</option>
		</userResponse>		
	</phase>			

	
	<phase num="6" animFrame="talk_in" sticky="1">
		<text width="600">If you could tell me whose portrait it was, I may be able to find a book that could help you!</text>
		
		<userResponse type="freeText">
			<input width="400" caseSensitive="0">
				<correctAns progressTo="7"><![CDATA[slosh]]></correctAns>
				<incorrectAns progressTo="12"></incorrectAns>
			</input>
		</userResponse>
		
	
	</phase>	
	
	
	<phase num="7" animFrame="talk_in">
		<text width="600">Ah! Slosh you say… Here it is! This book belonged to great-uncle Slosh.  It's been hidden in the archives, but it might contain some useful information!  I'll put it in your backpack.</text>
		<userResponse>
		<option progressTo="-1" fireTaskID="bookCollected" fireEvent="doshHeritage_bookCollected" >Brilliant! I'll take a look. This could really be helpful!</option>
		</userResponse>		
	</phase>	

	
	<phase num="8" animFrame="talk_in" sticky="1" questControlPoint="bookCollected" >
		<text width="400">Slosh was a clever old chap, and he loved secrets and puzzles! Trust uncle Slosh to leave a riddle behind!</text>
		
		<userResponse>
			<option progressTo="9">You've been a great help, Ink. Thanks!</option>
		</userResponse>		
		
		
		
	</phase>	
	
	<phase num="9" animFrame="talk_in" sticky="1" questControlPoint="sloshyMade">
		<text width="400">Best get to work! Good luck!</text>
		<textOnReturn>
			 Did you find any useful secrets in that book? Look carefully, I'm sure you'll find something! You might want to explore the palace a little more, too. 
		</textOnReturn>
		
	</phase>
	
	
	<phase num="10" animFrame="talk_in" questControlPoint="questCompleted">
		<text width="400">Great work, agent!  You'll be a legend of the SWS in no time!</text>
	</phase>	
	
	
	<phase num="11" animFrame="talk_in">
		<text width="600" >Glad to see you here! Bosh has been having some trouble putting those frames in order. Please help him - if one is missing, it could hold an important clue!</text>
	</phase>
	
	<phase num="12" animFrame="talk_in">
		<text width="400">Ohh, there is no book here by that name.</text>
	</phase>
	
	
	
</character>